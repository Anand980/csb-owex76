{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Testimonials.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","Component","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","skills","imgsrc","skillname","height","width","Porfolio","portfolio","concat","link","imgurl","description","Testimonials","testimonials","ContactUs","linkedinId","Footer","imagebaseurl","skypeid","App","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","Testimonials_Testimonials","ContactUs_ContactUs","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.029447c8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n        <header id=\"home\">\n          <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n              Show navigation\n            </a>\n            {/* <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a> */}\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\">\n                <a className=\"smoothscroll\" href=\"#home\">\n                  Home\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#resume\">\n                  Resume\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#portfolio\">\n                  Works\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#testimonials\">\n                  Testimonials\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#contact\">\n                  Contact\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"row banner\">\n            <div className=\"banner-text\">\n              <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n              <h3 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\n                I am a {resumeData.role}.{resumeData.roleDescription}\n              </h3>\n              <hr />\n              <ul className=\"social\">\n                {resumeData.socialLinks &&\n                  resumeData.socialLinks.map((item) => {\n                    return (\n                      <li key={item.name}>\n                        <a href={item.url}>\n                          <i className={item.className}></i>\n                        </a>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\">\n              <i className=\"icon-down-circle\"></i>\n            </a>\n          </p>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport \"./Main.css\";\n\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.education &&\n              resumeData.education.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfPassing} {item.YearOfPassing}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.work &&\n              resumeData.work.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfLeaving} {item.YearOfLeaving}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Skills</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <p>{resumeData.skillsDescription}</p>\n\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {resumeData.skills &&\n                  resumeData.skills.map((item) => {\n                    return (\n                      <img\n                        src={item.imgsrc}\n                        alt={item.skillname}\n                        height=\"50\"\n                        width=\"50\"\n                        className=\"icon\"\n                      />\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Check Out Some of My Works.</h1>\n            <div\n              id=\"portfolio-wrapper\"\n              className=\"bgrid-quarters s-bgrid-thirds cf\"\n            >\n              {resumeData.portfolio &&\n                resumeData.portfolio.map((item, key) => {\n                  return (\n                    <div className=\"columns portfolio-item\">\n                      <div className=\"item-wrap\">\n                        <a href={`${item.link}`}>\n                          <img\n                            src={`${item.imgurl}`}\n                            alt={key}\n                            className=\"item-img\"\n                          />\n                          <div className=\"overlay\">\n                            <div className=\"portfolio-item-meta\">\n                              <h5>{item.name}</h5>\n                              <p>{item.description}</p>\n                            </div>\n                          </div>\n                        </a>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {resumeData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n  imagebaseurl: \"https://github.com/anand980/\",\n  name: \"Anand Bharti\",\n  role: \"Frontend Developer\",\n  linkedinId: \" anandbharti980\",\n  skypeid: \"Your skypeid\",\n  roleDescription:\n    \"I like dabbling in various parts of frontend development and like to learn about new technologies, write technical articles or simply play games in my free time.\",\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/in/anandbharti980/\",\n      className: \"fa fa-linkedin\"\n    },\n    {\n      name: \"github\",\n      url: \"http://github.com/anand980\",\n      className: \"fa fa-github\"\n    },\n    {\n      name: \"skype\",\n      url: \"https://www.instagram.com/anandbharti980/\",\n      className: \"fa fa-instagram\"\n    }\n  ],\n  aboutme:\n    \"I am a Software Engineer. Currently working with Xoriant. I have worked with Fiserv in past. I graduated (BE Computer Science) from Pune University in 2017\",\n  address: \"India\",\n  website: \"https://github.com/anand980\",\n  education: [\n    {\n      UniversityName: \"Pune University\",\n      specialization: \"Computer Engineering\",\n      MonthOfPassing: \"Aug\",\n      YearOfPassing: \"2017\"\n      // Achievements: \"Some Achievements\"\n    },\n    {\n      UniversityName: \"MGM Bokaro\",\n      specialization: \"XII\",\n      MonthOfPassing: \"Apr\",\n      YearOfPassing: \"2012\"\n      // Achievements: \"Some Achievements\"\n    },\n    {\n      UniversityName: \"DAV Aurangabad\",\n      specialization: \"X\",\n      MonthOfPassing: \"Apr\",\n      YearOfPassing: \"2010\"\n      // Achievements: \"Some Achievements\"\n    }\n  ],\n  work: [\n    {\n      CompanyName: \"Xoriant\",\n      specialization: \"Software Engineer\",\n      MonthOfLeaving: \"May\",\n      YearOfLeaving: \"2022\"\n      // Achievements: \"Some Achievements\"\n    },\n    {\n      CompanyName: \"Fiserv\",\n      specialization: \"Xoriant\",\n      MonthOfLeaving: \"Dec\",\n      YearOfLeaving: \"2017\"\n      // Achievements: \"Some Achievements\"\n    }\n  ],\n  skillsDescription: \"Your skills here\",\n  skills: [\n    {\n      skillname: \"HTML5\",\n      imgsrc: \"html5.svg\"\n    },\n    {\n      skillname: \"CSS\",\n      imgsrc: \"css-3.svg\"\n    },\n    {\n      skillname: \"Reactjs\",\n      imgsrc: \"react.svg\"\n    },\n    {\n      skillname: \"Javascript\",\n      imgsrc: \"icons8-javascript.svg\"\n    },\n    {\n      skillname: \"Typescript\",\n      imgsrc: \"icons8-typescript.svg\"\n    },\n    {\n      skillname: \"Bootstrap\",\n      imgsrc: \"bootstrap.svg\"\n    }\n  ],\n  portfolio: [\n    {\n      name: \"Food Cart\",\n      description: \"A web application for food ordering\",\n      link: \"https://react-yndcui.stackblitz.io\",\n      imgurl:\n        \"https://b.zmtcdn.com/data/pictures/9/18857339/8f53919f1175c08cf0f0371b73704f9b_o2_featured_v2.jpg?output-format=webp\"\n    },\n    {\n      name: \"Online Food Order\",\n      description: \"A website similar to Zomato\",\n      link: \"https://react-ikfkwo.stackblitz.io\",\n      imgurl:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQbNw_vP05soOrrAwLWx7w7JV9769svcqDLOw&usqp=CAU\"\n    }\n  ],\n  testimonials: [\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\"\n    },\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\"\n    }\n  ]\n};\n\nexport default resumeData;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Testimonials from  './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <Testimonials resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}